openapi: 3.0.3
info:
  title: Swagger Organization Management
  description: Services of manage organizations
  contact:
    email: so@itmo.ru
  version: 1.0.0
servers:
  - url: https://localhost:8080/api/v1
tags:
  - name: orgmanager
    description: System of management of employeers
  - name: organization_service
    description: Service of manage organizations
paths:
  /orgmanager/hire/{id}:
    post:
      tags:
        - orgmanager
      summary: Add a new employee
      description: Add a new employee
      operationId: addEmployee
      parameters:
        - name: id
          in: path
          description: ID of organization
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Add a new employee
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
  
  /orgmanager/acquise/{absorbing-id}/{target-id}:
    put:
      tags:
        - orgmanager
      summary: Absorb one organization into another
      description: Absorb one organization into another
      operationId: absorbOrganization
      parameters:
        - name: absorbing-id
          in: path
          description: absorbing organization ID
          required: true
          schema:
            type: integer
            format: int64
        - name: target-id
          in: path
          description: ID of the target organization
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'

  /organization_service:
    patch:
      tags:
        - organization_service
      summary: Update an existing organization
      description: Update an existing organization by Id
      operationId: updateOrganization
      requestBody:
        description: Update an existent organization
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '404':
          description: Organization not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
    post:
      tags:
        - organization_service
      summary: Add a new organization
      description: Add a new organization
      operationId: addOrganization
      requestBody:
        description: Create a new organization
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
  
  /organization_service/findAll:
    get:
      tags:
        - organization_service
      summary: Find all organizations
      description: Find all organizations
      operationId: findAllOrganizations
      parameters:
        - name: page_num
          in: query
          description: num of page
          required: false
          schema:
            type: integer
            format: int64
        - name: page_size
          in: query
          description: size of page
          required: false
          schema:
            type: integer
            format: int64
        - name: sortBy
          in: query
          description: Sort by
          required: false
          schema:
            type: string
            example: ASC
            enum:
              - ASC
              - DESC
        - name: sortByColumn
          in: query
          description: Sort by column
          required: false
          schema:
            type: string
            example: name
            enum:
              - name
              - annualTurnover
              - type
              - address
        - name: filterField
          in: query
          description: Поле для фильтрации
          required: false
          schema:
            type: string
            example: name
            enum:
              - name
              - annualTurnover
              - type
              - address
        - name: filterValue
          in: query
          description: Значение для фильтрации
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResult'
        '404':
          description: Data not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
  
  /organization_service/{organizationId}:
    get:
      tags:
        - organization_service
      summary: Find organization by ID
      description: Returns a single organization
      operationId: getOrganizationById
      parameters:
        - name: organizationId
          in: path
          description: ID of organization to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '404':
          description: Organization not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
    delete:
      tags:
        - organization_service
      summary: Deletes a organization
      description: delete a organization
      operationId: deleteOrganization
      parameters:
        - name: organizationId
          in: path
          description: Organization id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid ID supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '404':
          description: Organization not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
    
  /organization_service/findCountAnnualTurnoverLower:
    get:
      tags:
        - organization_service
      summary: Find organization with lower annualTurnover
      description: Return the number of objects whose annualTurnover field value is less than the specified value
      operationId: findCountnnualTurnoverLower
      parameters:
        - name: annualTurnover
          in: query
          description: annual turnover of Organization
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CounterResponse'
        '400':
          description: Invalid annualTurnover supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '404':
          description: Organization not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
  
  /organization_service/getOrganizationsStartWithSubStr:
    get:
      tags:
        - organization_service
      summary: Find organization whose name field value starts with the given substring
      description: Return an array of objects whose name field value starts with the given substring.
      operationId: getOrganizationsStartWithSubStr
      parameters:
        - name: subStr
          in: query
          description: given substring
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/SearchResult'
        '400':
          description: Invalid subStr supplied
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
        '404':
          description: Organization not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ResponseWithDesc'
      
  /organization_service/getUniqueAnnualTurnovers:
      get:
        tags:
          - organization_service
        summary: Find unique annualTurnovers
        description: Return an array of unique values of the annualTurnover field for all objects.
        operationId: getUniqueAnnualTurnovers
        responses:
          '200':
            description: Successful operation
            content:
              application/xml:
                schema:
                  $ref: '#/components/schemas/UniqueAnnualTurnover'
          '400':
            description: Invalid subStr supplied
            content:
              application/xml:
                schema:
                  $ref: '#/components/schemas/ResponseWithDesc'
          '404':
            description: Organization not found
            content:
              application/xml:
                schema:
                  $ref: '#/components/schemas/ResponseWithDesc'
components:
  schemas:
    ResponseWithDesc:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        desc:
          type: string
          example: Done!
      xml:
        name: 'responseWithDesc'
    
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          minimum: 1
          uniqueItems: true
          example: 1
        username:
          type: string
          nullable: true
          minLength: 1
          example: theUser
        firstName:
          type: string
          nullable: true
          example: John
        lastName:
          type: string
          nullable: true
          example: James
        email:
          type: string
          nullable: true
          example: john@email.com
        organizationId:
          type: integer
          format: int64
          nullable: true
          minimum: 1
          uniqueItems: true
          example: 12345
      xml:
        name: 'employee'
    
    SearchResult:
      type: object
      properties:
        organization:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        page_num:
          type: integer
          format: int
        page_size:
          type: integer
          format: int
        page_total:
          type: integer
          format: int
      xml:
        name: 'searchResult'
    
    OrganizationType:
      type: string
      enum:
        - COMMERCIAL
        - PUBLIC
        - TRUST
        - PRIVATE_LIMITED_COMPANY
        - OPEN_JOINT_STOCK_COMPANY
      example: COMMERCIAL
      
    Status:
      type: string
      enum:
        - OK
        - NOT_FOUND
        - INCORRECT_PARAMS
      example: OK
    
    Address:
      type: object
      properties:
        street:
          type: string
          example: Pushkina
          nullable: true
      xml:
        name: 'address'
    
    CounterResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
          nullable: false
      xml:
        name: 'counterResponse'
    
    Coordinates:
      type: object
      properties:
        x:
          type: integer
          format: int64
          minimum: -962
          exclusiveMaximum: true
        y:
          type: integer
          format: int32
          
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          minimum: 1
          uniqueItems: true
          description: The ID is only used to update the entity! When created, the field is set automatically!
        name:
          type: string
          nullable: false
          minLength: 1
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          nullable: true
        annualTurnover:
          type: integer
          nullable: false
          minimum: 1
        type:
          $ref: '#/components/schemas/OrganizationType'
        officialAddress:
          $ref: '#/components/schemas/Address'
      xml:
        name: 'organization'
    
    UniqueAnnualTurnover:
      type: object
      properties:
        annualTurnovers:
          type: array
          items:
            type: integer
      xml:
        name: 'uniqueAnnualTurnover'